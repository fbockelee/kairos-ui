// File generated by $generator.name ( version $generator.version ) - Date $today.date("yyyy-MM-dd") ( Time $today.time )

import { BrowserModule } from '@angular/platform-browser';
import { NgModule } from '@angular/core';
import { BrowserAnimationsModule } from '@angular/platform-browser/animations';
import { CommonModule } from '@angular/common';

import { ReactiveFormsModule } from '@angular/forms';

import { AppComponent } from './app.component';
// Routing
import { AppRouting } from './app.routing';

import { HttpClientModule } from '@angular/common/http';

import { AppMenuComponent, AppSubMenuComponent} from './app.menu.component';
import { AppTopBarComponent } from './app.topbar.component';
import { AppFooterComponent } from './app.footer.component';
import { DashboardComponent } from './pages/dashboard.component';

#foreach ($entity in $selectedEntities)
#set ( $listComponentName = $entity.name + "ListComponent" )
#set ( $listheaderComponentName = $entity.name + "ListheaderComponent" )
#set ( $formComponentName = $entity.name + "FormComponent" )
#set ( $LCentityName = $fn.uncapitalize($entity.name) ) 
#set ( $listComponentPath = "./entities/" + $LCentityName + "/" + $LCentityName + "-list/" + $LCentityName + "-list.component" )
#set ( $listheaderComponentPath = "./entities/" + $LCentityName + "/" + $LCentityName + "-list/" + $LCentityName + "-listheader.component" )
#set ( $formComponentPath = "./entities/" + $LCentityName + "/" + $LCentityName + "-form/" + $LCentityName + "-form.component" )

// $entity.name Components
import { $listheaderComponentName } from '$listheaderComponentPath';
import { $listComponentName } from '$listComponentPath';
import { $formComponentName } from '$formComponentPath';
#end 

// Other Components
import { NotFoundComponent } from './not-found/not-found.component';
import { AboutComponent } from './about/about.component';
import { DeleteDialogComponent } from './delete-dialog/delete-dialog.component';
import { HomeListComponent } from './home-list/home-list.component';

// Modules
import { SimpleNotificationsModule } from 'angular2-notifications';
import {MatDatepickerModule} from '@angular/material/datepicker';

import { MaterialModule} from './material-module'
import { PrimengModule}  from './primeng-module'

// Services
#foreach ($entity in $selectedEntities)
#set ( $baseServiceName = $entity.name + "Service" )
#set ( $LCentityName = $fn.uncapitalize($entity.name) )
#set ( $baseServicePath = "./entities/" + $LCentityName + "/services/" + $LCentityName + ".service" )
import { $baseServiceName } from '$baseServicePath';
#end
import { EmitterService } from './services/emitter.service';
import { NotificationService } from './services/notification.service';
// import { PagerService } from './services/pager.service';


import { ApplicationStateService } from './services/application-state.service';

import {AngularHalModule} from 'angular4-hal';
import {ExternalConfigurationService} from './ExternalConfigurationService';

//import { DatePipe } from '@angular/common';
import { DateAdapter, MAT_DATE_LOCALE } from '@angular/material/core';
import { MatMomentDateModule, MAT_MOMENT_DATE_ADAPTER_OPTIONS } from '@angular/material-moment-adapter';
// import { PickDateAdapter, PICK_FORMATS } from './adapter/pickdate.adapter';
import { PlatformModule} from '@angular/cdk/platform';

import { registerLocaleData } from '@angular/common';
import localeFr from '@angular/common/locales/fr';
import localeFrExtra from '@angular/common/locales/extra/fr';
// import TranslateModule from  '@ngx-translate/core';

import { AuthGuard } from './auth.guard';
import { LoginComponent } from './login/login.component';
import { LoginRoutingModule } from './login/login.routing';

import { HTTP_INTERCEPTORS } from '@angular/common/http';
import { AngularDateHttpInterceptor } from './interceptors/AngularDateHttp.interceptor';

import {WebStorageModule, LocalStorageService} from "angular-localstorage";

import {FlexLayoutModule} from '@angular/flex-layout';
// import {NgbModule} from '@ng-bootstrap/ng-bootstrap';

// import { ScrollPanelModule } from 'primeng/scrollpanel';
// import { ButtonModule } from 'primeng/button';

registerLocaleData(localeFr, 'fr-FR', localeFrExtra);

@NgModule({
  declarations: [
    AppComponent,
	 AppMenuComponent,
     AppSubMenuComponent,
     AppTopBarComponent,
     AppFooterComponent,
     DashboardComponent,

#foreach ($entity in $selectedEntities)
    ${entity.name}ListheaderComponent,
    ${entity.name}ListComponent,
    ${entity.name}FormComponent,
#end 
    NotFoundComponent,
    AboutComponent,
    DeleteDialogComponent,
    HomeListComponent,
    LoginComponent
],
  entryComponents: [
    DeleteDialogComponent
],
  imports: [
    BrowserModule,
    CommonModule,
    ReactiveFormsModule,
    HttpClientModule,
    LoginRoutingModule, // doit être avant AppRouting
    AppRouting,
    BrowserAnimationsModule,
	MaterialModule,
    MatDatepickerModule,
    PlatformModule,
    SimpleNotificationsModule.forRoot(),
    AngularHalModule.forRoot(),
    MatMomentDateModule, // permet de gérer la timezone
    FlexLayoutModule,
	PrimengModule, // PrimeNg
    //ScrollPanelModule,
    //ButtonModule	
	//AppMenuModule,
    //AppTopBarModule,
    //AppFooterModule,
],
  providers: [
    { provide: 'ExternalConfigurationService', useClass: ExternalConfigurationService },
    { provide: MAT_DATE_LOCALE, useValue: 'fr-FR' },
    { provide: MAT_MOMENT_DATE_ADAPTER_OPTIONS, useValue: { useUtc: true } },
#foreach ($entity in $selectedEntities)
    ${entity.name}Service,
#end
    EmitterService,
    NotificationService,
	ApplicationStateService,
    MatDatepickerModule,
    AuthGuard,
    {
      provide: HTTP_INTERCEPTORS,
      useClass: AngularDateHttpInterceptor,
      multi: true
    },
    // LocalStorageService
    // DatePipe
],
  bootstrap: [AppComponent]
})
export class AppModule {
     constructor(private dateAdapter: DateAdapter<Date>){
       dateAdapter.setLocale('fr-FR');
   }
 }
